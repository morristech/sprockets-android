apply plugin: 'com.android.library'
apply plugin: 'maven'

def libName = 'Sprockets Android'
def libVersionCode = 7
def libVersionName = '2.6.0'

android {
    compileSdkVersion 22
    buildToolsVersion '22.0.1'
    defaultConfig {
        versionCode libVersionCode
        versionName libVersionName
        minSdkVersion 16
        targetSdkVersion 22
        consumerProguardFiles 'proguard-rules.pro'
    }
}

configurations {
    javadoc
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:palette-v7:22.2.0'
    compile 'com.android.support:support-v13:22.2.0'
    compile 'com.github.frankiesardo:icepick:2.3.6'
    compile 'com.github.frankiesardo:icepick-processor:2.3.6'
    compile 'com.google.android.gms:play-services-analytics:7.5.0'
    compile 'com.google.android.gms:play-services-location:7.5.0'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'commons-io:commons-io:2.4'
    compile 'net.sf.sprockets:sprockets:2.6.0'

    /* Google repository dependencies aren't visible in configs, use external jars instead */
    def extras = "${android.sdkDirectory}/extras"
    javadoc fileTree(dir: "${extras}/android/support", include: ['**/*.jar'])
    javadoc fileTree(dir: "${extras}/google/google_play_services/libproject", include: ['**/*.jar'])
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file://${buildDir}/repo/")
            pom.project {
                groupId 'net.sf.sprockets'
                artifactId 'sprockets-android'
                version libVersionName
                packaging 'aar'
                name libName
                description 'Android base components, widgets, and utility methods.'
                url 'https://pushbit.github.io/sprockets-android'
                licenses {
                    license {
                        name 'GNU Lesser General Public License, Version 3'
                        url 'http://www.gnu.org/licenses/lgpl.txt'
                        distribution 'repo'
                    }
                }
                developers {
                    developer {
                        id 'pushbit'
                        name 'Paul Bitson'
                        email 'pushbit@gmail.com'
                    }
                }
                issueManagement {
                    system 'GitHub'
                    url 'https://github.com/pushbit/sprockets-android/issues'
                }
                scm {
                    connection 'scm:git:git://github.com/pushbit/sprockets-android.git'
                    url 'https://github.com/pushbit/sprockets-android'
                }
            }
        }
    }
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task androidJavadocs(type: Javadoc, dependsOn: 'processReleaseResources') {
    source = android.sourceSets.main.java.srcDirs
            .plus(fileTree(dir: "${buildDir}/generated/source/r/release"))
            .plus(fileTree(dir: "../../sprockets/src/main/java"))
    classpath += files(android.bootClasspath, configurations.compile, configurations.javadoc)
    title = "${libName} ${libVersionName} API"
    options {
        links 'http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/',
                'https://commons.apache.org/proper/commons-configuration/javadocs/v1.10/apidocs/',
                'https://commons.apache.org/proper/commons-primitives/apidocs/',
                'https://jakewharton.github.io/butterknife/javadoc/',
                'https://square.github.io/picasso/javadoc/',
                'https://square.github.io/retrofit/javadoc/'
        linksOffline 'https://developer.android.com/reference/',
                "${android.sdkDirectory}/docs/reference"
        stylesheetFile file('src/main/javadoc/stylesheet.css')
    }
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

artifacts {
    archives androidSourcesJar, androidJavadocsJar
}
